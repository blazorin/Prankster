@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@implements IDisposable
@inject NavigationManager NavigationManager

@if (_modeloaded) {

  <div class="wrapper dz-mode @SupportDarkMode()">
        <!-- menu -->
        <div class="menu @(!_isOnHomePage ? "menu-hidden" : string.Empty)">
            <button class="toggle-btn" disabled style="visibility: hidden" />
            <div class="dz-btn-grp">
                
              <SettingsPop @bind-IsOpen="_settingsOpen" @bind-IsOpen:event="OnSettingsInteracted" />
               
            </div>
        </div>
        <!-- end menu -->
    </div>

      <!-- top-right nav -->
   <div class="dz-pop dz-pop2 dz-mode @SupportDarkMode()">
        <div class="@((_settingsOpen ? "dz-show " : "") + "dz-nav dz-nav2")">
            <div style="position: relative;left: 82px;">    
                <div class="pointer" />
                </div>
           <div style="position: relative;top: -25px;">
                <ul class="dz-top">
                    <li>
     
                        <div style="height: 28px; margin-right: 15px">
                            <i class="dz-icon-moon darkSwitch-icon"></i>
                        </div> 
                        <div class="dz-text">
                            <label class="darkSwitch-toggle" for="enableMode">
                                <input type="checkbox" id="enableMode">
                                <span class="darkSwitch-slider"></span>
                            </label>
                        </div>

                    </li>
                    <li>
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-search-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>search</h3>
                        </div>
                    </a>
                    
                    </li>
                    <li>
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-user-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>profile</h3>
                        </div>
                    </a>
                    
                    </li>
                    <li>
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-heart-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>followers <span>· 519</span></h3>
                        </div>
                    </a>
                    
                    </li>
                </ul>
           </div>
            <ul class="dz-mid">
                <li>
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-edit-2-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>posts <span>· 1285</span></h3>
                        </div>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-menu-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>additional...</h3>
                        </div>
                        <div class="dz-more">
                            <i class="dz-icon-arrow-forward"></i>
                        </div>
                    </a>
                </li>
            </ul>
            <ul class="dz-bottom">
                <li class="dz-del">
                    <a href="#">
                        <div class="dz-icon">
                            <i class="dz-icon-trash-o"></i>
                        </div>
                        <div class="dz-text">
                            <h3>deleted item</h3>
                        </div>
                    </a>
                </li>
            </ul>
        </div>
    </div>
     <!-- top-right nav -->

        
            <div class="dz-home dz-home3 dz-home4 dz-mode @SupportDarkMode()" @onclick="() => _settingsOpen = false" style="@(!_isOnHomePage ? (!_darkEnabledInit ? "background: var(--white)" : "background: var(--grey70)") : string.Empty)">
            @Body
            </div>
       

    <!-- start footer -->
    <div class="dz-footer">
        
        <div class="dz-tab-bar dz-tab-icon dz-flex-style dz-mode @SupportDarkMode() @(!_isOnHomePage ? "tab-bar-hidden" : string.Empty)" @onclick="() => _settingsOpen = false">
                <button class="dz-bar-btn dz-bar-btn-secondary">
                        <i class="dz-icon-star" style="color: #FAA501"></i>        
                </button>
                <button class="dz-bar-btn dz-bar-btn-secondary">
                        <i class="dz-icon-search-o"></i>
                </button>
                <button class="dz-bar-btn dz-bar-cam-bg">
                        <i class="dz-icon-phone" style="color: var(--white)"></i>
                </button>
                <button class="dz-bar-btn dz-bar-btn-secondary" style="bottom: 5px; position: relative" @onclick='() => NavigationManager.NavigateTo("counter")'> 
                    <div style="position: relative; right: -8px; bottom: -2px">
                        <span style="color: white">1</span>
                    </div>
                    <i class="dz-icon-recording"></i>
                </button>
               <button class="dz-bar-btn dz-bar-btn-secondary">
                        <i class="dz-icon-user-o"></i>
               </button>
        </div>
            
    </div>
    <!-- end footer -->
}

@code {
    bool _settingsOpen;
    // = true if has entered at least once
    bool _isOnHomePage;
    bool _darkEnabledInit;
    bool _modeloaded;
    bool _darkLoaded;
    EventHandler<LocationChangedEventArgs> _checkHasEnteredHomePage;

    protected override void OnInitialized() {
        _checkHasEnteredHomePage = (obj, args) =>
            {
                string loc = args.Location;

                _isOnHomePage = args.Location.Contains("home");
                StateHasChanged();
            };

        NavigationManager.LocationChanged += _checkHasEnteredHomePage;

    }

    protected override async Task OnInitializedAsync()
    {
        _darkEnabledInit = await JsRuntime.InvokeAsync<bool>("darkMode.get");
        _modeloaded = true;

        StateHasChanged();
    }

    

    protected override async Task OnAfterRenderAsync(bool firstRender) 
    {
        if (_darkLoaded || !_modeloaded)
            return;

        await JsRuntime.InvokeVoidAsync("darkMode.initializeFromBlazor"); // now done on Blazor
        _darkLoaded = true;
    }
            

    string SupportDarkMode() => _darkEnabledInit ? "dz-dark-mode" : string.Empty;


    public void Dispose()
    {
        NavigationManager.LocationChanged -= _checkHasEnteredHomePage;
    }

}