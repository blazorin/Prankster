@inherits TransitionableLayoutComponent
@inject NavigationManager _navManager
@using Pages

<div class="transition @transitioningClass @(Transition.IntoView ? "transitioned" : "transitioned_behind")">
    @Body
</div>

<style>
    .transition {
        position: static;
    }

    .transitioned {
        z-index: 1;
    }

    .transitioned_behind {
        z-index: 0;
    }
</style>

@code {
    private string transitioningClass => Transition.FirstRender
        ? (_navManager.Uri.EndsWith("/") ? "animate__fadeIn animate__slow animate__animated transitioned" : string.Empty ) : $"animate__{transitioningEffect()} animate__faster animate__animated";

    private string transitioningEffect()
    {
        if (customTransitions.TryGetValue((TransitionType.fromType, TransitionType.toType), out var custom))
        {
            return Transition.IntoView ? custom.effectIn : custom.effectOut;
        }
        else
        {
            var effect = Transition.IntoView ? "fadeIn" : "fadeOut";
            var direction = Transition.Backwards ? "Down" : "Up";
            return effect + direction;
        }
    }

    private Dictionary<(Type from, Type to), (string effectOut, string effectIn)> customTransitions =
        new Dictionary<(Type from, Type to), (string effectOut, string effectIn)>
        {
            { (typeof(Welcome), typeof(Home)), ( "fadeOutLeft", "fadeInRight" ) }
        };
}